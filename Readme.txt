# run as:

g++ main.cpp -I. -std=cc++17 -O3 -o DT


# generate configuration file (Cfg) with the gen.sh

# standard naming convention: k0-betaL-betaC-Volume-number

# k0 : newton coupling
# betaL : loop coupling
# betaC : component coupling
# Volume : number of tetrahedra (typically the fixed value), k means thousand
# number : occasional extra number for the cfg/config if there are more at the same lococation 
00
# example: Cfg-2.1--0.2--0.6-8k.txt || or if counted: ||  Cfg-2.1--0.2--0.6-8k-42.txt

# run as: ./DT <CFG>




CFG files are generated by "gen.sh"
Example CFG file:


for l in 0; do
for k in 2; do
for c in 0 ; do
for v in 3; do
for num in 0 ; do

name=conf-${k}-${d}-${T}-${V}k-${to}.dat
if [ ! -e ${name} ]; then
    continue;
fi
rand=$RANDOM

cat > Cfg-$k-$l-$c-${v}k-${num}.txt << EOF             # FILENAME
seed 						${rand}                    # seed of the random number
k0							$k                         # gravitational coupling
k3							-1                         # cosmological coupling
betac						$c                         # component coupling
betal						$l                         # loop coupling
sigma3						0.05                       # strength of the volume fixing 
prob23						0.5                        # probability of the bistellar flip move
probtree					0.05                       # probability of the tree moves
probe02						0                          # probability of the quadrangular pillow move
probv02						1                          # probability of the triangular pillow move

tuningsweeps					100                    # number of sweeps to be performed before the thermalization (start tuning k3 after reaching the desired volume)
measurementsweeps				400000                 # number of measurement sweeps to be performed
thermalizationsweeps				20000                  # number of thermalization sweeps to be performed
ksteps						${v}0                  # number of attempted moves (multiplied by 1000) within a sweep

allowselfadjacency				0                      # default mode
allowdegeneracy					0                      # default mode
dualspanningtree				1                      # default mode
spanningtree					1                      # default mode
middlegraph					1                      # default mode    

volume						${v}000                    # volume of the triangulation
input						0                          # start from minimal or from an input. If 0, starts from a minimal sphere
infile						conf-$k-$l-$c-${v}k.DT     # input triangulation file in case if input == 1
outfile						conf-$k-$l-$c-${v}k.DT     # name of the output triangulation file
fileID						$k-$l-$c-${v}k-${num}      # fileID, string to be used for every file to recognise outputs
number						${num}                     # number in case if many runs for the same couplings
printfreq					1000                       # frequency in sweeps for updating the .DT file

measuresimplexdata				1                      # measures standard obserables
measureadjacency				0                      # measures the adjacency matrix (two type, change in main.cpp and recompile, check the code)
measurehistograms				0                      # measure histograms of some observables

EOF

done;
done;
done;
done;
done;












#Run the code with betaC = betaL = 0 for standard DT with two trees on the top; Change it to observe the impact of the middle graph
